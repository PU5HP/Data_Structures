67. Add Binary
class Solution { 
public: 
    string addBinary(string a, string b) { 
          int idx1=a.length()-1; 
        int idx2=b.length()-1; 
        cout<<"idx1:"<<idx1<<"idx2:"<<idx2; 
         
        string ans="";char carry='0'; 
        while(idx1>=0 && idx2>=0){ 
            if(carry=='0') 
            { 
                if((a[idx1]=='0' && b[idx2]=='0')) 
                { 
                    ans.push_back('0'); 
                } 
                else if((a[idx1]=='1' && b[idx2]=='1')) 
                { 
                    ans.push_back('0'); 
                    carry='1'; 
                } 
                else if((a[idx1]=='1' && b[idx2]=='0')||(a[idx1]=='0' && b[idx2]=='1'))//else 
                { 
                    ans.push_back('1'); 
                    carry='0'; 
                } 
            } 
            else{ 
                if((a[idx1]=='0' && b[idx2]=='0')) 
                { 
                    ans.push_back('1'); 
                    carry='0'; 
                } 
                else if((a[idx1]=='1' && b[idx2]=='1')) 
                { 
                    ans.push_back('1'); 
                    carry='1'; 
                } 
                else if((a[idx1]=='1' && b[idx2]=='0')||(a[idx1]=='0' && b[idx2]=='1'))//else 
                { 
                    ans.push_back('0'); 
                    carry='1'; 
                } 
            } 
            idx1--;idx2--; 
        } 
        cout<<"ans"<<ans; 
         
            while(idx1>=0){ 
                if(carry=='1' && a[idx1]=='0') 
                { 
                    ans.push_back('1'); 
                    carry='0'; 
                } 
                else if(carry=='1' && a[idx1]=='1') 
                { 
                    ans.push_back('0'); 
                    carry='1'; 
                } 
                else if(carry=='0' && a[idx1]=='1') 
                { 
                    ans.push_back('1'); 
                    carry='0'; 
                } 
                else if(carry=='0' && a[idx1]=='0') 
                { 
                    ans.push_back('0'); 
                    carry='0'; 
                } 
                idx1--; 
            } 
     
            while(idx2>=0){ 
                if(carry=='1' && b[idx2]=='0') 
                { 
                    ans.push_back('1'); 
                    carry='0'; 
                } 
                else if(carry=='1' && b[idx2]=='1') 
                { 
                    ans.push_back('0'); 
                    carry='1'; 
                } 
                 else if(carry=='0' && b[idx2]=='1') 
                { 
                    ans.push_back('1'); 
                    carry='0'; 
                } 
                else if(carry=='0' && b[idx2]=='0') 
                { 
                    ans.push_back('0'); 
                    carry='0'; 
                } 
                idx2--; 
            } 
        cout<<"before:"; 
        cout<<ans; 
        if(carry=='1'){ 
                ans.push_back('1'); 
            } 
        cout<<"after:"<<ans; 
        reverse(ans.begin(),ans.end()); 
        return ans; 
    } 
};
